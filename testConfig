configuration TestConfig
{
    Import-DscResource -ModuleName PSDesiredStateConfiguration
    Import-DscResource -module xDSCDomainjoin
    Import-DscResource -ModuleName cChoco
    
    $svcTeamCityAgent = Get-AutomationPSCredential -Name 'svcTeamCityAgent'
    
    Node WebServer
    {
        WindowsFeature IIS
        {
            Ensure               = 'Present'
            Name                 = 'Web-Server'
            IncludeAllSubFeature = $true

        }
    }

    Node NotWebServer
    {
        WindowsFeature IIS
        {
            Ensure               = 'Absent'
            Name                 = 'Web-Server'

        }
    }
    
    Node TeamCityAgent
    {
        WindowsFeature IIS
        {
            Ensure               = 'Absent'
            Name                 = 'Web-Server'

        }
        
        Service TeamCityBuildAgent
        {   
            DisplayName           = 'TeamCity Build Agent'
            Name                  = 'TCBuildAgent'
            StartupType           = 'Automatic'
            State                 = 'Running'
            Credential            = $svcTeamCityAgent
        }
    }
    
        Node TeamCityAgentFull
    {
        xDSCDomainjoin JoinDomain
        {
            Domain = $domainName
            Credential = $domainCredentials
            JoinOU = "OU=TCA,OU=allPrivate,OU=allServers,OU=allMachines,DC=cloud,DC=rockend,DC=io"
        }

        File TeamCity
        {
            DestinationPath = "c:\software\Jetbrains\TeamCity\TeamCity-10.0.2.exe"
            Credential = $storageCredential
            Ensure = "Present"
            SourcePath = "\\prodrockcoresoftware.file.core.windows.net\software\Software\TeamCity\TeamCity-10.0.2.exe"
            Type = "File"
            Recurse = $false
        }

        File sqljdbc
        {
            DestinationPath = "c:\software\Microsoft\sqljdbc\sqljdbc_4.2.6420.100_enu.exe.lnk"
            Credential = $storageCredential
            Ensure = "Present"
            SourcePath = "\\prodrockcoresoftware.file.core.windows.net\software\Software\TeamCity\sqljdbc_4.2.6420.100_enu.exe.lnk"
            Type = "File"
            Recurse = $false
        }

        cChocoInstaller installChoco
        {
            InstallDir = "c:\software\choco"
        }

        cChocoPackageInstaller installChrome
        {
            Name        = "googlechrome"
            DependsOn   = "[cChocoInstaller]installChoco"
        }

        cChocoPackageInstaller installGit
        {
            Ensure = 'Present'
            Name = "git"
            #Params = ""
        }

        cChocoPackageInstaller installMSBuildTools
        {
            Ensure = 'Present'
            Name = "microsoft-build-tools"
            Version = "12.0.21005.20140416"
            #Params = ""
        }

        cChocoPackageInstaller NodeJS
        {
            Ensure = 'Present'
            Name = "nodejs.install"
            #Params = ""
        }

        cChocoPackageInstaller Redis
        {
            Ensure = 'Present'
            Name = "redis-64"
            #Params = ""
        }

        File AzureStorageEmulator
        {
            DestinationPath = "c:\software\Microsoft\Azure Storage Emulator\MicrosoftAzureStorageEmulator.msi"
            Credential = $storageCredential
            Ensure = "Present"
            SourcePath = "\\prodrockcoresoftware.file.core.windows.net\software\Software\Microsoft\Azure Storage Emulator\MicrosoftAzureStorageEmulator.msi"
            Type = "File"
            Recurse = $false
        }

        File AzureBuildTools
        {
            DestinationPath = "c:\software\Microsoft\Azure Build Tools"
            Credential = $storageCredential
            Ensure = "Present"
            SourcePath = "\\prodrockcoresoftware.file.core.windows.net\software\Software\Microsoft\Azure Build Tools"
            Type = "Directory"
            Recurse = $true
        }

        File SQLEXPR
        {
            DestinationPath = "c:\software\Microsoft\SQL\SQLEXPR_x64_ENU.exe"
            Credential = $storageCredential
            Ensure = "Present"
            SourcePath = "\\prodrockcoresoftware.file.core.windows.net\software\Software\Microsoft\SQL\SQLEXPR_x64_ENU.exe"
            Type = "File"
            Recurse = $false
        }
          <#DEPENDS ON SQL EXPRESS INSTALL
        Package AzureStorageEmulator
        {
            Ensure              = "Present"
            Path                = "$Env:SystemDrive\software\Microsoft\Azure Storage Emulator\MicrosoftAzureStorageEmulator.msi"
            Name                = "Microsoft Azure Storage Emulator - v4.5"
            ProductId           = "54277EE5-C729-4002-B3E2-0E78B3EF3F3E"
            DependsOn           = "[File]AzureStorageEmulator"
        }
        

        Package AzureLibsForNet
        {
            Ensure              = "Present"
            Path                = "c:\software\Microsoft\Azure Build Tools\WindowsAzureLibsForNet-x64.msi"
            Name                = "Windows Azure Libraries for .NET â€“ v2.3"
            ProductId           = "C0591F2A-45AD-4189-86A7-C2B1DF3D148D"
        }

        Package AzureAuthoringTools
        {
            Ensure              = "Present"
            Path                = "c:\software\Microsoft\Azure Build Tools\WindowsAzureAuthoringTools-x64.msi"
            Name                = "Windows Azure Authoring Tools - v2.3"
            ProductId           = "CA53F7A1-A71D-4C7F-ABD2-7BDD26FE0D74"
            DependsOn           = "[Package]AzureLibsForNet"
        }

        Package WindowsAzureTools
        {
            Ensure              = "Present"
            Path                = "c:\software\Microsoft\Azure Build Tools\WindowsAzureTools.vs120.exe"
            Name                = "Windows Azure Tools for Microsoft Visual Studio 2013 - v2.3"
            ProductId           = "E055B52B-39C5-4AA9-BD7C-05CC5D1774B7"
            DependsOn           = "[Package]AzureAuthoringTools"
        }
#>
        #Install c:\software\Microsoft\sqljdbc\sqljdbc_4.2.6420.100_enu.exe (depends on copy jobs)
        #Install c:\software\TeamCity-10.0.2.exe (depends on previous and copy jobs)

        #Copy "S:\Software\TeamCity\Config\*.*" to F:\TeamCityData\config (depends on all previous)
        #Copy S:\Software\TeamCity\Plugins\*.* to F:\TeamCityData\plugins
        cChocoPackageInstaller TeamCityAgent
        {
            Ensure = 'Present'
            Name = "teamcityagent"
            Params = "serverUrl=teamcity.cloud.rockend.io"
        }
        WindowsFeature IIS
        {
            Ensure               = 'Absent'
            Name                 = 'Web-Server'
        }
    }

}
